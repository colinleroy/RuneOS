---

- name: mount partitions
  include_role:
    name: mount-sd-partitions

- name: cleanup source directory
  file:
    path: "{{ root_mount }}/{{ source_directory }}"
    state: absent
  become: yes
  when: cleanup_sources is defined and cleanup_sources == true

- name: cleanup potential ssh public keys
  file:
    path: "{{ root_mount }}//root/.ssh"
    state: absent
  become: yes

- name: umount partitions
  include_role:
    name: umount-sd-partitions

- name: check root filesystem
  shell: "e2fsck -f -y /dev/{{ local_sd.rootpart }}"
  become: yes
  when: cleanup_sources is defined and cleanup_sources == true

- name: shrink root filesystem
  shell: "resize2fs /dev/{{ local_sd.rootpart }} {{ root_size_sectors }}s"
  become: yes
  when: cleanup_sources is defined and cleanup_sources == true

- parted:
    device: "/dev/{{ local_sd.blockdevice }}"
    unit: MiB
  register: blk_info
  become: yes

- name: repartition - remove partitions
  parted:
    device: "/dev/{{ local_sd.blockdevice }}"
    number: "{{ item.num }}"
    state: absent
  with_items:
   - "{{ blk_info.partitions }}"
  become: yes

- name: repartition - create boot partition
  parted:
    device: "/dev/{{ local_sd.blockdevice }}"
    number: 1
    state: present
    part_start: 2048s
    part_end: "{{ (boot_size_sectors + 2047) | int }}s"
  become: yes

- name: repartition - set boot partition type
  shell: "sfdisk --part-type /dev/{{ local_sd.blockdevice }} 1 c"
  become: yes

- name: repartition - create root partition 
  parted:
    device: "/dev/{{ local_sd.blockdevice }}"
    number: 2
    state: present
    part_start: "{{ (boot_size_sectors + 2048) | int }}s"
    part_end: "{{ (2047 + boot_size_sectors + root_size_sectors) | int }}s"
  become: yes
