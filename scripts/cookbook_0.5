#!/bin/bash
	########################################
	# RuneAudio v0.5-beta cookbook         #
	# written by: Orion (production image) #
	# edited for 2018 kernel by Gearhead   #
	# HW platform: RaspberryPi B1 and B2   #
	########################################
	# install base ArchLinux system (follow guide https://wiki.archlinux.org/index.php/Installation_guide, choose syslinux bootloader
	# all rune packages are shown with armv6h for the B1/PiZero, substitute armv7h for the B2/3
	# general system update
	pacman-key --init
	pacman-key --populate archlinuxarm

	pacman -Syu --noconfirm
	
	# configure ssh to allow root login
	# edit /etc/ssh/sshd_config and add:
	# PermitRootLogin yes
	# to the file
	echo "PermitRootLogin yes" >> /etc/ssh/sshd_config
	# change root password to rune
	echo -e "rune\nrune" | passwd root
	
	# uninstall unecessary packages
	pacman -R  jfsutils lvm2 man-db man-pages reiserfsprogs haveged
	
	# install git support (22.47 MiB)
	pacman -S git --noconfirm
	
	# install chrony
	pacman -S chrony --noconfirm
	
	# first time sync
	chronyd -q 'pool pool.ntp.org iburst'
	
	# install Redis (1.53 MiB)
	pacman -S redis --noconfirm
	
	#########################################
	### -- additional system libraries -- ###
	#########################################
	# install libmcrypt (0.25 MiB)
	pacman -S libmcrypt --noconfirm
	
	# install libjpeg-turbo (1.15 MiB)
	pacman -S libjpeg --noconfirm
	
	# install apr-util (nginx req.) (1.63 MiB) 
	pacman -S apr-util --noconfirm
	
	##########################
	### -- system tools -- ###
	##########################
	
	# install wget (3.05 MiB)
	pacman -S wget --noconfirm
	
	# install ethtool (0.25 MiB)
	pacman -S ethtool --noconfirm
	
	###########################
	### -- network tools -- ###
	###########################
	# install avahi (2.30 MiB)
	pacman -S avahi --noconfirm
	
	# install nettools (0.49 MiB)
	pacman -S net-tools --noconfirm
	
	# install ifplugd (0.13 MiB)
	pacman -S ifplugd --noconfirm
	
	# install wireless tools (0.33 MiB)
	pacman -S wireless_tools --noconfirm
	
	# install wpa_supplicant (1.43 MiB)
	pacman -S wpa_supplicant --noconfirm
	
	# install hostapd (0.85 MiB)
	pacman -S hostapd --noconfirm
	
	# install nfs-utils (2.49 MiB)
	pacman -S nfs-utils --noconfirm
	
	# install libupnp (0.46 MiB)
	pacman -S libupnp --noconfirm
	
	# install libxml2 (8.10 MiB)
	pacman -S libxml2 --noconfirm
	
	# install yasm (2.80 MiB)
	pacman -S yasm --noconfirm
	
	##############################
	### -- filesystem tools -- ###
	##############################
	# install NTFS support (1.50 MiB)
	pacman -S ntfs-3g --noconfirm
	
	# install dosfstools (0.25 MiB)
	pacman -S dosfstools --noconfirm
	
	# install exFAT support (0.19 MiB)
	pacman -S exfat-utils --noconfirm
	
	# install sshfs support (0.07 MiB)
	pacman -S sshfs --noconfirm
	
	# install cifs-utils (0.63 MiB)
	pacman -S cifs-utils --noconfirm
	
	# install ftpfs (0.06 MiB)
	pacman -S curlftpfs --noconfirm
	
	# install USB automount daemon (0.34 MiB)
	# >>> REMEMBER to enable kernel polling when using devmon without udisks:
	# http://ignorantguru.github.com/udevil/#polling
	pacman -S udevil --noconfirm
	
	# add sudo
	pacman -S sudo --noconfirm
	
	# install Midnight Commander
	pacman -S mc --noconfirm
	
	#########################
	### -- AUDIO stack -- ###
	#########################
	# install ALSA utils (9.66 MiB)
	pacman -S alsa-utils --noconfirm
	
	# install SOX (3.08 MiB)
	pacman -S sox --noconfirm
	
	############################
	### -- install RuneUI -- ###
	############################
	cd /
	ln -s /srv/http/ /var/www
	
	##############################
	# -- setup filesystem ACL -- #
	##############################
	# setup tmpfs directory
	#chmod 777 /run
	
	# set up locale
	echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
	locale-gen
	localectl set-locale LANG=en_US.UTF-8

	# stop auditd from spamming dmesg
	# add audit=0 to cmdline.txt
	
	# setup log directory
	rm -r /var/log/*
	mkdir /var/log/runeaudio
	echo "logs            /var/log		tmpfs nodev,nosuid,noatime,mode=1777,size=5M                  0       0" >> /etc/fstab
	echo "rune-logs       /var/log/runeaudio	tmpfs nodev,nosuid,noatime,mode=1777,size=5M                  0       0" >> /etc/fstab
	# set up temp directories
	mkdir /var/tmp
	mkdir /var/www/tmp
	echo "var-tmp         /var/tmp		tmpfs nodev,nosuid,noatime,mode=1777,size=5M 0       0" >> /etc/fstab
	echo "http-tmp        /srv/http/tmp	tmpfs nodev,nosuid,noatime,mode=1777,size=5M,uid=http,gid=http 0       0" >> /etc/fstab
	
	mount -a
		
	cd /var/www
	
	# clone RuneUI git repo
	git clone -b 0.5b https://github.com/gearhead/RuneUI.git .
		
	# install motd
	cp /var/www/app/config/_os/etc/motd /etc/
	cp /var/www/app/config/_os/etc/issue /etc/
		
	# setup colorls
	cp /var/www/app/config/_os/etc/bash.bashrc /etc/car rc.l	
	
	# setup webserver directory
	chown -R http.http /srv/http/
	
	# these are done in the git repository kg 2018
	#chmod 644 $(find /srv/http/ -type f)
	#chmod 755 $(find /srv/http/ -type d)
	#chmod -R 755 /srv/http/command/
	#chmod -R 755 /srv/http/db/redis_datastore_setup
	#chmod -R 755 /srv/http/db/redis_acards_details
	
	# remove default user
	userdel -r alarm

	# install RuneAudio MPD package dependencies
	# install libmpdclient (0.27 MiB)
	pacman -S libmpdclient --noconfirm
	
	# install faad2 (0.39 MiB)
	pacman -S faad2 --noconfirm
	
	# install sqlite3 (1.21 MiB)
	pacman -S sqlite3 --noconfirm
	
	# install libmad (0.13 MiB)
	pacman -S libmad --noconfirm
	
	# install libmms (0.09 MiB)
	pacman -S libmms --noconfirm
	
	# install libid3tag (0.12 MiB)
	pacman -S libid3tag --noconfirm
	
	# install audiofile (0.31 MiB)
	pacman -S audiofile --noconfirm
	
	# install mpg123 (0.69 MiB)
	pacman -S mpg123 --noconfirm
	
	# install mpc (0.10 MiB)
	pacman -S mpc --noconfirm
	
	pacman -S jsoncpp --noconfirm
	pacman -S libmicrohttpd --noconfirm
	
	#pacman -S libpulse --noconfirm
	pacman -S perl-uri --noconfirm
	
	# install smartmontools
	pacman -S smartmontools --noconfirm
	
	# install parted
	pacman -S parted --noconfirm
	
	# ----->>>> DOWNLOAD PACKAGES FROM RuneOS REPO <<<<----- #
	
	# get packages somehow
	cd /usr/local/src/
	
	# ----->>>> INSTALL RuneOS packages <<<<----- #
	
	# install ffmpeg-rune
	pacman -Sd --nodeps libva
	pacman -U ffmpeg-rune-3.4.1-3-armv6h.pkg.tar.xz --noconfirm
	
	# install mpd-rune
	pacman -U mpd-rune-0.20.20-1-armv6h.pkg.tar.xz --noconfirm
	
	# install mpdscribble-rune
	pacman -U mpdscribble-0.22-8-armv6h.pkg.tar.xz --noconfirm
	
	# install nginx-rune
	pacman -U nginx-rune-1.14.0-6-armv6h.pkg.tar.xz --noconfirm
	
	# install php-rune
	pacman -U php-rune-5.6.33-1-armv6h.pkg.tar.xz --noconfirm
	# error: failed to commit transaction (conflicting files)
	# php-rune: /var/run exists in filesystem (owned by filesystem)
	# Errors occurred, no packages were upgraded.
	# packagefile is broken, needs to be fixed, added --force to try
	
	# install phpredis-rune
	pacman -U phpredis-rune-2.2.7-2-armv6h.pkg.tar.xz --noconfirm
	
	# install php support
	pacman -U php-libevent-0.1.0-2-armv6h.pkg.tar.xz --noconfirm
	pacman -U php-pthreads-2.0.11-1-armv6h.pkg.tar.xz --noconfirm
	pacman -U phpiredis-rune-1.0.0.3-armv6h.pkg.tar.xz --noconfirm
	
	# cannot get this to compile
	# install samba4-rune
	pacman -U samba4-rune-4.8.1-1-armv6h.pkg.tar.xz --noconfirm
	# appears to use python2, Look at Arch pkgfile to see if this has been upgraded to use python3
	# also will not install due to other packages which are installed
	
	#error: failed to commit transaction (conflicting files)
	# samba4-rune: /usr/include/samba-4.0/wbclient.h exists in filesystem (owned by libwbclient)
	# samba4-rune: /usr/lib/libwbclient.so.0 exists in filesystem (owned by libwbclient)
	# samba4-rune: /usr/lib/libwbclient.so.0.14 exists in filesystem (owned by libwbclient)
	# samba4-rune: /usr/lib/pkgconfig/wbclient.pc exists in filesystem (owned by libwbclient)
	# samba4-rune: /usr/lib/samba/libreplace-samba4.so exists in filesystem (owned by libwbclient)
	# samba4-rune: /usr/lib/samba/libwinbind-client-samba4.so exists in filesystem (owned by libwbclient)
	# Errors occurred, no packages were upgraded.

	# install shairport-sync-rune
	pacman -U shairport-sync-rune-3.1.7-1-armv6h.pkg.tar.xz --noconfirm
	pacman -U alac-0.r21.1588be3-1-armv7h.pkg.tar.xz
	
	#install libupnp-rune
	pacman -U libupnp-rune-20180123-1-armv6h.pkg.tar.xz --noconfirm
	
	# install upmpdcli-rune
	pacman -U upmpdcli-rune-1.2.15-3-armv6h.pkg.tar.xz --noconfirm
	
	# install ashuffle
	pacman -U ashuffle-rune-0.22-6-armv6h.pkg.tar.xz --noconfirm
	
	# instapp spotify
	pacman -U libspotify-12.1.103-3-armv6h.pkg.tar.xz --noconfirm
	# does not install
	# armv7 takes a different package - libspotify-12.1.51-3-armv7h.pkg.tar.xz
	
	pacman -U spop-rune-0.0.4-1-armv6h.pkg.tar.xz  --noconfirm
	
	# install hfs support
	pacman -U hfsprogs-rune-332.25-10-armv6h.pkg.tar.xz --noconfirm
	pacman -U hfsutils-rune-3.2.6-5-armv6h.pkg.tar.xz --noconfirm
	
	#install webUI for alsa mixer
	pacman -U amixer-webui-0.r55.cedaebb-1-armv6h.pkg.tar.xz
	
	# install snapcast
	pacman -U snapcast-0.14.0-1-armv6h.pkg.tar.xz
	# not built or installed, yet
	
	# Install bluetooth components
	pacman -U bluez-utils-compat-5.49-1-armv6h.pkg.tar.xz
	pacman -U bluez-alsa-git-v1.2.0.r64.g9045edb-1-armv6h.pkg.tar.xz
	
	# Add those lines to /etc/dbus-1/system.d/bluetooth.conf
	# <policy user="bluealsa">
	#  <allow send_destination="org.bluez"/>
	#</policy>
	# Users can use this service when they are members of the "audio" group.

	pacman -U pi-bluetooth-1-1-armv6h.pkg.tar.xz
	Enable with: systemctl enable brcm43438.service
	# To enable this at startup, you have to edit
	# /etc/bluetooth/main.conf
	# AutoEnable=true

	# Install patched kernel for 384k and DSD
	linux-raspberrypi-dsd-384k-4.14.34-1-armv6h.pkg.tar.xz
	
	# ----->>>> INSTALL Go Daddy Intermediate CA (Jamendo) <<<<----- #
	
	cp -Rv /var/www/app/config/_os/usr/share/ca-certificates /usr/share/
	cp -Rv /var/www/app/config/_os/etc/ca-certificates /etc/
	
	# update SSL certs database
	trust extract-compat -v
	# responds with this:
	(p11-kit:2062) extract_certificate: skipping certificate that doesn't match trust flags
(p11-kit:2062) extract_certificate: skipping certificate that doesn't match trust flags
(p11-kit:2063) extract_certificate: skipping certificate that doesn't match trust flags
(p11-kit:2063) extract_certificate: skipping certificate that doesn't match trust flags
(p11-kit:2064) extract_certificate: skipping certificate that doesn't match trust flags
(p11-kit:2064) extract_certificate: skipping certificate that doesn't match trust flags
(p11-kit:2065) extract_certificate: skipping certificate that doesn't match trust flags
(p11-kit:2065) extract_certificate: skipping certificate that doesn't match trust flags
(p11-kit:2066) extract_certificate: skipping certificate without a value
(p11-kit:2066) extract_certificate: skipping certificate without a value
(p11-kit:2066) extract_certificate: skipping certificate without a value
(p11-kit:2066) extract_certificate: skipping certificate without a value
(p11-kit:2066) extract_certificate: skipping certificate without a value
(p11-kit:2066) extract_certificate: skipping certificate without a value
(p11-kit:2066) extract_certificate: skipping certificate without a value
(p11-kit:2455) extract_certificate: skipping certificate that doesn't match trust flags
(p11-kit:2455) extract_certificate: skipping certificate that doesn't match trust flags

	
	## Done to here w/o rune pkgs
	
	# ----->>>> SYSTEM CONFIGURATION <<<<----- #
	
	# install RuneAudio system tweaks
	#cp -Rv /var/www/app/config/_os/etc/* /etc
	#rm /etc/profile.d/proxy.sh 
	cp -R /var/www/app/config/_os/usr/* /usr
	rm -rf /etc/security/limits.d/
	mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.backup
	ln -s /etc/nginx/nginx-dev.conf /etc/nginx/nginx.conf
	
	# disable RNGD - not installed
	#systemctl disable rngd
	
	# disable systemd-journald
	systemctl disable systemd-journald
	systemctl mask systemd-journald
	systemctl mask systemd-journal-flush.service
	
	# disable systemd-logind
	systemctl disable systemd-logind
	systemctl mask systemd-logind
	
	# did not enable these - looking at the runeui reset, first
	# enable php
	systemctl enable php-fpm
	
	# enable nginx
	systemctl enable nginx
	
	# enable mpd
	systemctl enable mpd
	
	# enable redis
	systemctl enable redis
	
	# enable RuneAudio background workers
	systemctl enable rune_PL_wrk
	systemctl enable rune_SY_wrk
	
	# enable rune_shutdown
	systemctl enable rune_shutdown
	#
	# finished here on out
	
	# link Orion Optimize script
	ln -s /srv/http/command/orion_optimize.sh /usr/sbin/
	
	# create /mnt directory structure
	mkdir /mnt/MPD
	mkdir /mnt/MPD/USB
	mkdir /mnt/MPD/Webradio
	mkdir /mnt/MPD/NAS
	mkdir /mnt/MPD/LocalStorage
	chown -R mpd.audio /mnt/MPD
	
	# reboot system
	reboot

	
	#Log in and repair filesystem
	#rm -rf /var/run /var/lock && pacman -S filesystem
	
	#edit php config to be line Pi2
	#edit /etc/redis.ini to match pi2
